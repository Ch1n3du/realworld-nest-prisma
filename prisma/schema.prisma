// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String      @unique
  bio       String?
  email     String      @unique
  image     String?
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  followers Follows[]   @relation("following")
  following Follows[]   @relation("follower")
  articles  Article[]
  comments  Comment[]
  favorites Favorites[]
}

model Follows {
  follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String
  followed   User   @relation("following", fields: [followedId], references: [id])
  followedId String

  @@id([followerId, followedId])
}

model Article {
  id          String         @id @default(uuid())
  slug        String         @unique
  author      User           @relation(fields: [authorId], references: [id])
  authorId    String
  title       String         @unique
  description String
  body        String
  comments    Comment[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  tagList     ArticleToTag[]
  favorited   Favorites[]
}

model Favorites {
  article   Article @relation(fields: [articleId], references: [id])
  articleId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  @@id([userId, articleId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  article   Article? @relation(fields: [articleId], references: [id])
  articleId String?
}

model Tag {
  name     String         @id
  articles ArticleToTag[]
}

model ArticleToTag {
  article    Article  @relation(fields: [articleId], references: [id])
  articleId  String
  tag        Tag      @relation(fields: [tagName], references: [name])
  tagName    String
  assignedAt DateTime @default(now())

  @@id([articleId, tagName])
}
